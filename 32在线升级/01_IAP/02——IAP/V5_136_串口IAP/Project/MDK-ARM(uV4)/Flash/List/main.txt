; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\User\fonts -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX ..\..\User\main.c]
                          THUMB

                          AREA ||i.PrintfLogo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  PrintfLogo PROC
;;;142    */
;;;143    static void PrintfLogo(void)
000000  b570              PUSH     {r4-r6,lr}
;;;144    {
;;;145    	/* 检测CPU ID */
;;;146    	{
;;;147    		/* 参考手册：
;;;148    			32.6.1 MCU device ID code
;;;149    			33.1 Unique device ID register (96 bits)
;;;150    		*/
;;;151    		uint32_t CPU_Sn0, CPU_Sn1, CPU_Sn2;
;;;152    
;;;153    		CPU_Sn0 = *(__IO uint32_t*)(0x1FFF7A10);
000002  4820              LDR      r0,|L1.132|
000004  6804              LDR      r4,[r0,#0]
;;;154    		CPU_Sn1 = *(__IO uint32_t*)(0x1FFF7A10 + 4);
000006  1d00              ADDS     r0,r0,#4
000008  6805              LDR      r5,[r0,#0]
;;;155    		CPU_Sn2 = *(__IO uint32_t*)(0x1FFF7A10 + 8);
00000a  1d00              ADDS     r0,r0,#4
00000c  6806              LDR      r6,[r0,#0]
;;;156    
;;;157    		printf("\r\nCPU : STM32F407IGT6, LQFP176, UID = %08X %08X %08X\n\r"
00000e  4623              MOV      r3,r4
000010  462a              MOV      r2,r5
000012  4631              MOV      r1,r6
000014  a01c              ADR      r0,|L1.136|
000016  f7fffffe          BL       __2printf
;;;158    			, CPU_Sn2, CPU_Sn1, CPU_Sn0);
;;;159    	}
;;;160    
;;;161    	printf("\n\r");
00001a  a028              ADR      r0,|L1.188|
00001c  f7fffffe          BL       __2printf
;;;162    	printf("*************************************************************\n\r");
000020  a027              ADR      r0,|L1.192|
000022  f7fffffe          BL       __2printf
;;;163    	printf("* 例程名称   : %s\r\n", EXAMPLE_NAME);	/* 打印例程名称 */
000026  a136              ADR      r1,|L1.256|
000028  a039              ADR      r0,|L1.272|
00002a  f7fffffe          BL       __2printf
;;;164    	printf("* 例程版本   : %s\r\n", DEMO_VER);		/* 打印例程版本 */
00002e  a13d              ADR      r1,|L1.292|
000030  a03e              ADR      r0,|L1.300|
000032  f7fffffe          BL       __2printf
;;;165    	printf("* 发布日期   : %s\r\n", EXAMPLE_DATE);	/* 打印例程日期 */
000036  a142              ADR      r1,|L1.320|
000038  a044              ADR      r0,|L1.332|
00003a  f7fffffe          BL       __2printf
;;;166    
;;;167    	/* 打印ST固件库版本，这3个定义宏在stm32f10x.h文件中 */
;;;168    	printf("* 固件库版本 : V%d.%d.%d (STM32F4xx_StdPeriph_Driver)\r\n", __STM32F4XX_STDPERIPH_VERSION_MAIN,
00003e  2300              MOVS     r3,#0
000040  2203              MOVS     r2,#3
000042  2101              MOVS     r1,#1
000044  a046              ADR      r0,|L1.352|
000046  f7fffffe          BL       __2printf
;;;169    			__STM32F4XX_STDPERIPH_VERSION_SUB1,__STM32F4XX_STDPERIPH_VERSION_SUB2);
;;;170    	printf("* \r\n");	/* 打印一行空格 */
00004a  a053              ADR      r0,|L1.408|
00004c  f7fffffe          BL       __2printf
;;;171    	printf("* QQ    : 1295744630 \r\n");
000050  a053              ADR      r0,|L1.416|
000052  f7fffffe          BL       __2printf
;;;172    	printf("* 旺旺  : armfly\r\n");
000056  a058              ADR      r0,|L1.440|
000058  f7fffffe          BL       __2printf
;;;173    	printf("* Email : armfly@qq.com \r\n");
00005c  a05b              ADR      r0,|L1.460|
00005e  f7fffffe          BL       __2printf
;;;174    	printf("* 淘宝店: armfly.taobao.com\r\n");
000062  a061              ADR      r0,|L1.488|
000064  f7fffffe          BL       __2printf
;;;175    	printf("* Copyright www.armfly.com 安富莱电子\r\n");
000068  a067              ADR      r0,|L1.520|
00006a  f7fffffe          BL       __2printf
;;;176    	printf("*************************************************************\n\r");
00006e  a014              ADR      r0,|L1.192|
000070  f7fffffe          BL       __2printf
;;;177    	printf("1. 电脑键盘按下数字1进行新程序的bin文件下载\n\r");
000074  a06e              ADR      r0,|L1.560|
000076  f7fffffe          BL       __2printf
;;;178    	printf("2. 电脑键盘按下数字2跳转到新的程序执行\n\r");
00007a  a079              ADR      r0,|L1.608|
00007c  f7fffffe          BL       __2printf
;;;179    }
000080  bd70              POP      {r4-r6,pc}
;;;180    
                          ENDP

000082  0000              DCW      0x0000
                  |L1.132|
                          DCD      0x1fff7a10
                  |L1.136|
000088  0d0a4350          DCB      "\r\nCPU : STM32F407IGT6, LQFP176, UID = %08X %08X %08X"
00008c  55203a20
000090  53544d33
000094  32463430
000098  37494754
00009c  362c204c
0000a0  51465031
0000a4  37362c20
0000a8  55494420
0000ac  3d202530
0000b0  38582025
0000b4  30385820
0000b8  25303858
                  |L1.188|
0000bc  0a0d00            DCB      "\n\r",0
0000bf  00                DCB      0
                  |L1.192|
0000c0  2a2a2a2a          DCB      "*******************************************************"
0000c4  2a2a2a2a
0000c8  2a2a2a2a
0000cc  2a2a2a2a
0000d0  2a2a2a2a
0000d4  2a2a2a2a
0000d8  2a2a2a2a
0000dc  2a2a2a2a
0000e0  2a2a2a2a
0000e4  2a2a2a2a
0000e8  2a2a2a2a
0000ec  2a2a2a2a
0000f0  2a2a2a2a
0000f4  2a2a2a  
0000f7  2a2a2a2a          DCB      "******\n\r",0
0000fb  2a2a0a0d
0000ff  00      
                  |L1.256|
000100  56352d31          DCB      "V5-136_",180,174,191,218,"IAP",0
000104  33365fb4
000108  aebfda49
00010c  415000  
00010f  00                DCB      0
                  |L1.272|
000110  2a20c0fd          DCB      "* ",192,253,179,204,195,251,179,198,"   : %s\r\n",0
000114  b3ccc3fb
000118  b3c62020
00011c  203a2025
000120  730d0a00
                  |L1.292|
000124  56312e32          DCB      "V1.2",0
000128  00      
000129  00                DCB      0
00012a  00                DCB      0
00012b  00                DCB      0
                  |L1.300|
00012c  2a20c0fd          DCB      "* ",192,253,179,204,176,230,177,190,"   : %s\r\n",0
000130  b3ccb0e6
000134  b1be2020
000138  203a2025
00013c  730d0a00
                  |L1.320|
000140  32303135          DCB      "2015-03-05",0
000144  2d30332d
000148  303500  
00014b  00                DCB      0
                  |L1.332|
00014c  2a20b7a2          DCB      "* ",183,162,178,188,200,213,198,218,"   : %s\r\n",0
000150  b2bcc8d5
000154  c6da2020
000158  203a2025
00015c  730d0a00
                  |L1.352|
000160  2a20b9cc          DCB      "* ",185,204,188,254,191,226,176,230,177,190," : V%d.%d."
000164  bcfebfe2
000168  b0e6b1be
00016c  203a2056
000170  25642e25
000174  642e    
000176  25642028          DCB      "%d (STM32F4xx_StdPeriph_Driver)\r\n",0
00017a  53544d33
00017e  32463478
000182  785f5374
000186  64506572
00018a  6970685f
00018e  44726976
000192  6572290d
000196  0a00    
                  |L1.408|
000198  2a200d0a          DCB      "* \r\n",0
00019c  00      
00019d  00                DCB      0
00019e  00                DCB      0
00019f  00                DCB      0
                  |L1.416|
0001a0  2a205151          DCB      "* QQ    : 1295744630 \r\n",0
0001a4  20202020
0001a8  3a203132
0001ac  39353734
0001b0  34363330
0001b4  200d0a00
                  |L1.440|
0001b8  2a20cdfa          DCB      "* ",205,250,205,250,"  : armfly\r\n",0
0001bc  cdfa2020
0001c0  3a206172
0001c4  6d666c79
0001c8  0d0a00  
0001cb  00                DCB      0
                  |L1.460|
0001cc  2a20456d          DCB      "* Email : armfly@qq.com \r\n",0
0001d0  61696c20
0001d4  3a206172
0001d8  6d666c79
0001dc  4071712e
0001e0  636f6d20
0001e4  0d0a00  
0001e7  00                DCB      0
                  |L1.488|
0001e8  2a20ccd4          DCB      "* ",204,212,177,166,181,234,": armfly.taobao.com\r\n",0
0001ec  b1a6b5ea
0001f0  3a206172
0001f4  6d666c79
0001f8  2e74616f
0001fc  62616f2e
000200  636f6d0d
000204  0a00    
000206  00                DCB      0
000207  00                DCB      0
                  |L1.520|
000208  2a20436f          DCB      "* Copyright www.armfly.com ",176,178,184,187,192,179,181
00020c  70797269
000210  67687420
000214  7777772e
000218  61726d66
00021c  6c792e63
000220  6f6d20b0
000224  b2b8bbc0
000228  b3b5    
00022a  e7d7d30d          DCB      231,215,211,"\r\n",0
00022e  0a00    
                  |L1.560|
000230  312e20b5          DCB      "1. ",181,231,196,212,188,252,197,204,176,180,207,194,202
000234  e7c4d4bc
000238  fcc5ccb0
00023c  b4cfc2ca
000240  fdd7d631          DCB      253,215,214,"1",189,248,208,208,208,194,179,204,208,242,181
000244  bdf8d0d0
000248  d0c2b3cc
00024c  d0f2b5  
00024f  c462696e          DCB      196,"bin",206,196,188,254,207,194,212,216,"\n\r",0
000253  cec4bcfe
000257  cfc2d4d8
00025b  0a0d00  
00025e  00                DCB      0
00025f  00                DCB      0
                  |L1.608|
000260  322e20b5          DCB      "2. ",181,231,196,212,188,252,197,204,176,180,207,194,202
000264  e7c4d4bc
000268  fcc5ccb0
00026c  b4cfc2ca
000270  fdd7d632          DCB      253,215,214,"2",204,248,215,170,181,189,208,194,181,196,179
000274  ccf8d7aa
000278  b5bdd0c2
00027c  b5c4b3  
00027f  ccd0f2d6          DCB      204,208,242,214,180,208,208,"\n\r",0
000283  b4d0d00a
000287  0d00    
000289  00                DCB      0
00028a  00                DCB      0
00028b  00                DCB      0

                          AREA ||i.SerialDownload||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  SerialDownload PROC
;;;106    */
;;;107    static void SerialDownload(void)
000000  b510              PUSH     {r4,lr}
;;;108    {
;;;109    	int32_t Size = 0;
000002  2400              MOVS     r4,#0
;;;110    
;;;111    	printf("等待发送文件..................按键盘上的字母a终止发送\n\r");
000004  a012              ADR      r0,|L2.80|
000006  f7fffffe          BL       __2printf
;;;112    	Size = Ymodem_Receive(&tab_1024[0]);
00000a  481f              LDR      r0,|L2.136|
00000c  f7fffffe          BL       Ymodem_Receive
000010  4604              MOV      r4,r0
;;;113    	if (Size > 0)
000012  2c00              CMP      r4,#0
000014  dd05              BLE      |L2.34|
;;;114    	{
;;;115    		printf("\n\r编程成功，文件名：%s，大小：%d字节\n\r", FileName, Size);
000016  4622              MOV      r2,r4
000018  491c              LDR      r1,|L2.140|
00001a  a01d              ADR      r0,|L2.144|
00001c  f7fffffe          BL       __2printf
000020  e014              B        |L2.76|
                  |L2.34|
;;;116    	}
;;;117    	else if (Size == -1)
000022  1c60              ADDS     r0,r4,#1
000024  b918              CBNZ     r0,|L2.46|
;;;118    	{
;;;119    		printf("\n\r下载的文件大小超出了用户区flash大小\n\r");
000026  a024              ADR      r0,|L2.184|
000028  f7fffffe          BL       __2printf
00002c  e00e              B        |L2.76|
                  |L2.46|
;;;120    	}
;;;121    	else if (Size == -2)
00002e  1ca0              ADDS     r0,r4,#2
000030  b918              CBNZ     r0,|L2.58|
;;;122    	{
;;;123    		printf("\n\r校验失败\n\r");
000032  a02b              ADR      r0,|L2.224|
000034  f7fffffe          BL       __2printf
000038  e008              B        |L2.76|
                  |L2.58|
;;;124    	}
;;;125    	else if (Size == -3)
00003a  1ce0              ADDS     r0,r4,#3
00003c  b918              CBNZ     r0,|L2.70|
;;;126    	{
;;;127    		printf("\n\r用户终止发送\n\r");
00003e  a02c              ADR      r0,|L2.240|
000040  f7fffffe          BL       __2printf
000044  e002              B        |L2.76|
                  |L2.70|
;;;128    	}
;;;129    	else
;;;130    	{
;;;131    		printf("\n\r文件接收失败\n\r");
000046  a02f              ADR      r0,|L2.260|
000048  f7fffffe          BL       __2printf
                  |L2.76|
;;;132    	}
;;;133    }
00004c  bd10              POP      {r4,pc}
;;;134    
                          ENDP

00004e  0000              DCW      0x0000
                  |L2.80|
000050  b5c8b4fd          DCB      181,200,180,253,183,162,203,205,206,196,188,254,"......."
000054  b7a2cbcd
000058  cec4bcfe
00005c  2e2e2e2e
000060  2e2e2e  
000063  2e2e2e2e          DCB      "...........",176,180,188,252,197,204,201,207,181,196,215
000067  2e2e2e2e
00006b  2e2e2eb0
00006f  b4bcfcc5
000073  ccc9cfb5
000077  c4d7    
000079  d6c4b861          DCB      214,196,184,"a",214,213,214,185,183,162,203,205,"\n\r",0
00007d  d6d5d6b9
000081  b7a2cbcd
000085  0a0d00  
                  |L2.136|
                          DCD      tab_1024
                  |L2.140|
                          DCD      FileName
                  |L2.144|
000090  0a0db1e0          DCB      "\n\r",177,224,179,204,179,201,185,166,163,172,206,196,188
000094  b3ccb3c9
000098  b9a6a3ac
00009c  cec4bc  
00009f  fec3fba3          DCB      254,195,251,163,186,"%s",163,172,180,243,208,161,163,186
0000a3  ba2573a3
0000a7  acb4f3d0
0000ab  a1a3ba  
0000ae  2564d7d6          DCB      "%d",215,214,189,218,"\n\r",0
0000b2  bdda0a0d
0000b6  00      
0000b7  00                DCB      0
                  |L2.184|
0000b8  0a0dcfc2          DCB      "\n\r",207,194,212,216,181,196,206,196,188,254,180,243,208
0000bc  d4d8b5c4
0000c0  cec4bcfe
0000c4  b4f3d0  
0000c7  a1b3acb3          DCB      161,179,172,179,246,193,203,211,195,187,167,199,248,"fla"
0000cb  f6c1cbd3
0000cf  c3bba7c7
0000d3  f8666c61
0000d7  7368b4f3          DCB      "sh",180,243,208,161,"\n\r",0
0000db  d0a10a0d
0000df  00      
                  |L2.224|
0000e0  0a0dd0a3          DCB      "\n\r",208,163,209,233,202,167,176,220,"\n\r",0
0000e4  d1e9caa7
0000e8  b0dc0a0d
0000ec  00      
0000ed  00                DCB      0
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L2.240|
0000f0  0a0dd3c3          DCB      "\n\r",211,195,187,167,214,213,214,185,183,162,203,205,"\n"
0000f4  bba7d6d5
0000f8  d6b9b7a2
0000fc  cbcd0a  
0000ff  0d00              DCB      "\r",0
000101  00                DCB      0
000102  00                DCB      0
000103  00                DCB      0
                  |L2.260|
000104  0a0dcec4          DCB      "\n\r",206,196,188,254,189,211,202,213,202,167,176,220,"\n"
000108  bcfebdd3
00010c  cad5caa7
000110  b0dc0a  
000113  0d00              DCB      "\r",0
000115  00                DCB      0
000116  00                DCB      0
000117  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;52     */
;;;53     int main(void)
000000  2400              MOVS     r4,#0
;;;54     {
;;;55     	uint8_t key = 0;
;;;56     
;;;57     	bsp_Init();		/* 硬件初始化 */
000002  f7fffffe          BL       bsp_Init
;;;58     	PrintfLogo();	/* 打印例程信息到串口1 */
000006  f7fffffe          BL       PrintfLogo
;;;59     	FLASH_If_Init(); /* 初始化flash操作 */
00000a  f7fffffe          BL       FLASH_If_Init
;;;60     	
;;;61     	/* 如果用户区flash有写保护 */
;;;62     	if (FLASH_If_GetWriteProtectionStatus() == 0)   
00000e  f7fffffe          BL       FLASH_If_GetWriteProtectionStatus
000012  b950              CBNZ     r0,|L3.42|
;;;63     	{
;;;64     		/* 解保护 */
;;;65     		if(FLASH_If_DisableWriteProtection() == 1)
000014  f7fffffe          BL       FLASH_If_DisableWriteProtection
000018  2801              CMP      r0,#1
00001a  d103              BNE      |L3.36|
;;;66     		{
;;;67     			/* 解保护成功 */
;;;68     			printf("\n\r解保护成功\n\r");
00001c  a011              ADR      r0,|L3.100|
00001e  f7fffffe          BL       __2printf
000022  e002              B        |L3.42|
                  |L3.36|
;;;69     		}
;;;70     		else
;;;71     		{
;;;72     			/* 解保护失败 */
;;;73     			SerialPutString("解保护失败\r\n");
000024  a013              ADR      r0,|L3.116|
000026  f7fffffe          BL       Serial_PutString
                  |L3.42|
;;;74     		}
;;;75     	}
;;;76     
;;;77     	while (1)
00002a  e019              B        |L3.96|
                  |L3.44|
;;;78     	{
;;;79     		/* 等待接收字符（通过电脑键盘输入） */
;;;80     		key = GetKey();
00002c  f7fffffe          BL       GetKey
000030  4604              MOV      r4,r0
;;;81     
;;;82     		if (key == 0x31)
000032  2c31              CMP      r4,#0x31
000034  d102              BNE      |L3.60|
;;;83     		{
;;;84     			/* 下载新的用户代码到flash里面  */
;;;85     			SerialDownload();
000036  f7fffffe          BL       SerialDownload
00003a  e011              B        |L3.96|
                  |L3.60|
;;;86     		}
;;;87     		else if (key == 0x32) 
00003c  2c32              CMP      r4,#0x32
00003e  d10f              BNE      |L3.96|
;;;88     		{
;;;89     			JumpAddress = *(__IO uint32_t*) (APPLICATION_ADDRESS + 4);
000040  4810              LDR      r0,|L3.132|
000042  6840              LDR      r0,[r0,#4]
000044  4910              LDR      r1,|L3.136|
000046  6008              STR      r0,[r1,#0]  ; JumpAddress
;;;90     			/* 用户应用地址 */
;;;91     			Jump_To_Application = (pFunction) JumpAddress;
000048  4608              MOV      r0,r1
00004a  6800              LDR      r0,[r0,#0]  ; JumpAddress
00004c  490f              LDR      r1,|L3.140|
00004e  6008              STR      r0,[r1,#0]  ; Jump_To_Application
;;;92     			/* 初始化MSP */
;;;93     			__set_MSP(*(__IO uint32_t*) APPLICATION_ADDRESS);
000050  490c              LDR      r1,|L3.132|
000052  6808              LDR      r0,[r1,#0]
000054  f3808808          MSR      MSP,r0
000058  bf00              NOP      
;;;94     			Jump_To_Application();
00005a  480c              LDR      r0,|L3.140|
00005c  6800              LDR      r0,[r0,#0]  ; Jump_To_Application
00005e  4780              BLX      r0
                  |L3.96|
000060  e7e4              B        |L3.44|
;;;95     		}
;;;96     	}
;;;97     }
;;;98     
                          ENDP

000062  0000              DCW      0x0000
                  |L3.100|
000064  0a0dbde2          DCB      "\n\r",189,226,177,163,187,164,179,201,185,166,"\n\r",0
000068  b1a3bba4
00006c  b3c9b9a6
000070  0a0d00  
000073  00                DCB      0
                  |L3.116|
000074  bde2b1a3          DCB      189,226,177,163,187,164,202,167,176,220,"\r\n",0
000078  bba4caa7
00007c  b0dc0d0a
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
                  |L3.132|
                          DCD      0x08010000
                  |L3.136|
                          DCD      JumpAddress
                  |L3.140|
                          DCD      Jump_To_Application

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  tab_1024
                          %        1024
                  FileName
                          %        256

                          AREA ||.data||, DATA, ALIGN=2

                  Jump_To_Application
                          DCD      0x00000000
                  JumpAddress
                          DCD      0x00000000
                  FlashProtection
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_e86ed1dd____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_e86ed1dd____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_e86ed1dd____REVSH|
#line 144
|__asm___6_main_c_e86ed1dd____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
